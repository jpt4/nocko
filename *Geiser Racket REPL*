Welcome to Racket v8.9 [cs].
racket@> (enter! nocko.rkt)
stdin::1211: enter!: not a module path or #f
  at: nocko.rkt
  in: (enter! nocko.rkt)
  location...:
   stdin::1211
  context...:
   /gnu/store/pf6ac5wrw8a1xjxhanp2wgpgvlga5k96-racket-vm-cs-8.9/opt/racket-vm/collects/racket/enter.rkt:10:0
   /gnu/store/pf6ac5wrw8a1xjxhanp2wgpgvlga5k96-racket-vm-cs-8.9/opt/racket-vm/collects/racket/repl.rkt:11:26
racket@> (enter! "nocko.rkt")
racket@nocko> (run 1 (q) (rembero 1 '(1 2 3 4) q))
'((2 3 4))
racket@nocko> (run* (q) (rembero 1 '(1 2 3 4) q))
'((2 3 4))
racket@nocko> (run* (q) (rembero 1 '(1 2 3 4 1) q))
'((2 3 4 1))
racket@nocko> (run 2 (q) (rembero 1 '(1 2 3 4 1) q))
'((2 3 4 1))
racket@nocko> (enter! "nocko.rkt")
  [re-loading /home/jpt4/codex/code/nocko/mk-prelude.rkt]
  [re-loading /home/jpt4/codex/code/nocko/nocko.rkt]
racket@nocko> (run 2 (q) (rembero 1 '(1 2 3 4 1) q))
'((2 3 4))
racket@nocko> racket@nocko> (run* (q) (rembero 1 '(1 2 3 4 1) q))
'((2 3 4))
racket@nocko> (run* (q) (rembero 1 '(2 3 4 1) q))
'((2 3 4))
racket@nocko> (run* (q) (rembero 1 '(2 3 4) q))
'((2 3 4))
racket@nocko> (run* (q) (rembero 1 '() q))
'(())
racket@nocko> (run* (q) (rembero '() '() q))
'(())
racket@nocko> (run* (q) (rembero '() '(1 2 3) q))
'((1 2 3))
racket@nocko> (run 1 (q) (distincto '(1 2 3 4 5)))
'(_.0)
racket@nocko> (run 1 (q) (distincto '(1 2 3 4 4)))
'()
racket@nocko> (run 1 (q) (distincto q))
'(())
racket@nocko> (run 2 (q) (distincto q))
'(() ((_.0) (=/= ((_.0 ())))))
racket@nocko> (run 4 (q) (distincto q))
'(()
  ((_.0) (=/= ((_.0 ()))))
  ((_.0 _.1) (=/= ((_.0 _.1)) ((_.0 ())) ((_.1 ()))))
  ((_.0 _.1 _.2)
   (=/= ((_.0 _.1)) ((_.0 _.2)) ((_.0 ())) ((_.1 _.2)) ((_.1 ())) ((_.2 ())))))
racket@nocko> (run 1 (q) (distincto '(() 1)))
'()
racket@nocko> '(() 1)
'(() 1)
racket@nocko> (run 1 (q) (== '() 1))
'()
racket@nocko> (run 1 (q) (=/= '() 1))
'(_.0)
racket@nocko> (run 1 (q) (distincto '(() 1)))
'()
racket@nocko> '(() 1)
'(() 1)
racket@nocko> (run 1 (q) (distincto '(() 1)))
'()
racket@nocko> (run 1 (q) (== '() 1))
'()
racket@nocko> (run 1 (q) (=/= '() 1))
'(_.0)
racket@nocko> (run 1 (q) (distincto '(1 ())))
'()
racket@nocko> (run 1 (q) (distincto '(1 '())))
'(_.0)
racket@nocko> (run 1 (q) (distincto '(1)))
'(_.0)
racket@nocko> '(1 ())
'(1 ())
racket@nocko> '(1 '())
'(1 '())
racket@nocko> (cdr '(1 ()))
'(())
racket@nocko> (cdr '(1 '()))
'('())
racket@nocko> (run 1 (q) (distincto '('() 1)))
'(_.0)
racket@nocko> (run 1 (q) (distincto '('() ())))
'()
racket@nocko> (run 1 (q) (distincto '('() '())))
'()
racket@nocko> (define (subseto ss set)
		(conde
		 [(nullo ss)]
		 [(fresh (a d res)
			 (caro ss a) (cdro ss d)
			 (rembero a set res)
			 (conde
			  [(== set res) fail]
			  [(=/= set res) (subseto d res)]))]))
		 